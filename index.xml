<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog </title>
    <link>https://franklinliang.github.io/</link>
    <language>en-us</language>
    <author>Franklin Liang</author>
    <rights>(C) 2021</rights>
    <updated>2021-03-12 19:34:10 -0500 EST</updated>

    
      <item>
        <title>First Person AHK</title>
        <link>https://franklinliang.github.io/posts/first-person-ahk/</link>
        <pubDate>Fri, 12 Mar 2021 19:34:10 EST</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/first-person-ahk/</guid>
        <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The first time I had ever used AHK was back in highschool. My friend made a Discord bot called &amp;ldquo;Starmine&amp;rdquo; that would give out points whenever a user typed !starmine.&lt;/p&gt;
&lt;p&gt;It was a fun incremental/idle game that we all played, and while you could wait for the passive point generation, the fastest way to get points was to type  !starmine.&lt;/p&gt;
&lt;p&gt;The game got really competitive and as we went into the summer months and I needed a way to edge out the competition.&lt;/p&gt;
&lt;p&gt;Enter AHK.&lt;/p&gt;
&lt;p&gt;A few minutes of searching yielded this language that was easy to use for a programming beginner (me).&lt;/p&gt;
&lt;p&gt;Back in 2017, the wiki for AHK was a little lacking in detail but I was able to piece together a simple script, with some help from reddit, which automated the Starmine game. Success!&lt;/p&gt;
&lt;h1 id=&#34;elite-afk&#34;&gt;Elite: AFK&lt;/h1&gt;
&lt;p&gt;Fast forward to Christmas 2020, more than three years since I last touched AHK. My friend introduced me to a game called Elite: Dangerous, a mind numbing MMO that I have developed a love-hate relationship with in my three months of experience.&lt;/p&gt;
&lt;p&gt;Within this game there are several unfun gameplay loops that you need to master in order to progress to the more fun portions of the game. One of these loops is gathering engineering materials.&lt;/p&gt;
&lt;p&gt;Smart players figured out the most efficient way to gather each type of material and compiled it into a spreadsheet.&lt;/p&gt;
&lt;p&gt;There within lies the dreaded Jameson&amp;rsquo;s Crashed Python. This method of collecting encoded data requires the player to point and click three beacons around the player, and then log out and log back in to reset the beacons.&lt;/p&gt;
&lt;p&gt;This is not gameplay. I don&amp;rsquo;t know what this is, but it is definitely not gameplay.&lt;/p&gt;
&lt;p&gt;My friend had been playing this game for five years and has done this task hundreds of times. So I dusted off AHK and got to work.&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t recognize the AHK docs the first time I opened them up. They were so neatly organized, the style was much better and it was apparent that a lot of effort went into making examples.&lt;/p&gt;
&lt;h1 id=&#34;planning-the-script&#34;&gt;Planning the script&lt;/h1&gt;
&lt;p&gt;From the get-go I scoped out some issues I knew would suck.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How do I pan the camera&lt;/li&gt;
&lt;li&gt;How do I deal with loading screens&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Everything else could be accomplished with sequential keypresses.&lt;/p&gt;
&lt;h1 id=&#34;panning-the-camera&#34;&gt;Panning the camera&lt;/h1&gt;
&lt;p&gt;AHK has the ability to move a cursor to a specific point on the screen using the &lt;code&gt;MouseMove&lt;/code&gt; function. However, this doesn&amp;rsquo;t work in first person games.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/MouseMove.jpg&#34; alt=&#34;MouseMove&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can&amp;rsquo;t move the mouse to a point further than the edge of the screen. I needed a way to move the mouse in a direction instead of to a point.&lt;/p&gt;
&lt;p&gt;After searching the AHK forums, I stumbled upon a library called LLMouse written by evilC.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.autohotkey.com/boards/viewtopic.php?f=19&amp;amp;t=26137&#34;&gt;https://www.autohotkey.com/boards/viewtopic.php?f=19&amp;amp;t=26137&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A copy of the library can be found &lt;a href=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/LLMouse.ahk&#34;&gt;here&lt;/a&gt; (fetched December 2020)&lt;/p&gt;
&lt;p&gt;The description says, &amp;ldquo;a library to send low level mouse input&amp;rdquo;. The library comes with a function &lt;code&gt;LLMouse.Move(x, y, times, rate)&lt;/code&gt; which lets us move the mouse some number of units in a direction. It also lets us specify the speed and multiplier for movement.&lt;/p&gt;
&lt;p&gt;Perfect, now we can pan the camera by sending relative movement input. Even if the mouse hits the side of the screen, we can continue to move the mouse.&lt;/p&gt;
&lt;h1 id=&#34;loading-screens&#34;&gt;Loading screens&lt;/h1&gt;
&lt;p&gt;The other parts of the script can be timed or done sequentially. Loading screens are a different issue as the time it takes to get through the loading screen varies from computer to computer.&lt;/p&gt;
&lt;p&gt;Looking through the AHK wiki, I found a function called &lt;code&gt;PixelGetColor&lt;/code&gt; which allows AHK to obtain the color of a specified pixel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/Loading1.jpg&#34; alt=&#34;First Loading Screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first loading screen is between exiting the game and entering the main menu. The program looks for a light blue pixel that should remain the same across all game versions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/Loading2.jpg&#34; alt=&#34;Second Loading Screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;The next loading screen is between the main menu and entering the game. The program looks for when the black color of the loading screen stop showing up. I didn&amp;rsquo;t pick a color that appears on screen after the loading finishes because different ships have varying colors and users can customize the HUD colors.&lt;/p&gt;
&lt;h1 id=&#34;all-done-sort-of&#34;&gt;All done! Sort of&amp;hellip;&lt;/h1&gt;
&lt;p&gt;The code was pretty simple to work out but there are still many things to improve. The script only works for 1980x1080 resolution since the camera movements are hard-coded. I believe that I could calculate the ratio of movement required to move from one beacon to the next, meaning that a user would only have to modify one parameter to adjust the overall camera movement.&lt;/p&gt;
&lt;p&gt;The biggest issue is the reliability of the SRV positioning. I have a screenshot in the repo for the script but it is still unreliable.&lt;/p&gt;
&lt;p&gt;There was a bug where the exit script button doesn&amp;rsquo;t work sometimes. I&amp;rsquo;m not actually sure what the issue with that is, I would love it if someone would let me know.&lt;/p&gt;
&lt;p&gt;The repo can be found &lt;a href=&#34;https://github.com/FranklinLiang/Jameson&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;p&gt;This entire project is Matthew&amp;rsquo;s fault, and will not be maintained while I have ragequitted Elite. Feel free to make it better and fix it up yourself.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>How to run a Tor relay as a student for free</title>
        <link>https://franklinliang.github.io/posts/how-to-run-a-tor-relay-as-a-student-for-free/</link>
        <pubDate>Sun, 31 Jan 2021 03:23:22 EST</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/how-to-run-a-tor-relay-as-a-student-for-free/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;This post is based on Robert DeVore&amp;rsquo;s &amp;ldquo;Run a Tor relay&amp;rdquo; found here:
&lt;a href=&#34;https://www.robertdevore.com/run-a-tor-relay/&#34;&gt;https://www.robertdevore.com/run-a-tor-relay/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tor is a service used by thousands of people everyday to access the internet safely and anonymously.&lt;/p&gt;
&lt;p&gt;While I have been using Tor for quite some time, it always seemed daunting to help the Tor network by running a relay. Horror stories about getting mail from ISPs relating to the traffic of anonymous users accessing illegal materials masked by your IP.&lt;/p&gt;
&lt;p&gt;This is a common misconception that just by running a relay, you run the risk of being targeted by authorities.&lt;/p&gt;
&lt;h1 id=&#34;types-of-tor-relays&#34;&gt;Types of Tor relays&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Parts of this are abridged from the EFF&amp;rsquo;s page on Tor relays:
&lt;a href=&#34;https://www.eff.org/pages/what-tor-relay&#34;&gt;https://www.eff.org/pages/what-tor-relay&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are three different types of Tor relays: middle relays, exit relays, and bridges. Each serve an important purpose, however the risk associated with running each type of relay is different.&lt;/p&gt;
&lt;p&gt;When a connection is established using Tor, the first two hops are through middle relays. These middle relays help anonymize the the traffic of the user by passing it along to another relay. However, since these relays are not passing traffic into the clearnet, there is very little risk in running a middle relay. The main risk falls upon someone operating an exit relay.&lt;/p&gt;
&lt;p&gt;Exit relays act as the source of the traffic, thus when illegal materials are accessed using Tor, the exit relay appears as the source of the request. Exit relays are much harder to operate due to the work required to maintain the relay as it may attract attention from law enforcement agencies.&lt;/p&gt;
&lt;p&gt;Bridges are similar to middle relays, however they are not publicly listed as a relay. These relays are important to circumvent censorship tools in countries that restrict access to Tor.&lt;/p&gt;
&lt;p&gt;In this guide I will demonstrate how to setup a &lt;strong&gt;middle relay&lt;/strong&gt;.&lt;/p&gt;
&lt;h1 id=&#34;accessing-the-github-student-pack&#34;&gt;Accessing the Github Student Pack&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are not a student, you can skip this portion, however you will have to pay to setup the server that the relay operates from.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since 2013, Github has provided students with a Student Developer Pack. This amazing program allows for students that sign up for Github with a student email to receive a plethora of free services and software.&lt;/p&gt;
&lt;p&gt;All you need to do is navigate to: &lt;a href=&#34;https://education.github.com/pack&#34;&gt;https://education.github.com/pack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow the instructions on the site to get access to your free pack. After this, you want to find the DigitalOcean free credit offer.&lt;/p&gt;
&lt;p&gt;Copy and redeem the code on DigitalOcean&amp;rsquo;s billing page after creating an account.&lt;/p&gt;
&lt;h1 id=&#34;creating-the-droplet&#34;&gt;Creating the Droplet&lt;/h1&gt;
&lt;p&gt;Once you&amp;rsquo;ve created your account DigitalOcean will provide you with some options to jumpstart a project. We will ignore this and instead navigate towards the Create Droplet button. You will be taken to a page that provides you with some options for configuring your Droplet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Droplets are just what DigitalOcean calls their machines&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Name your Droplet&lt;/li&gt;
&lt;li&gt;Select the $5/month option&lt;/li&gt;
&lt;li&gt;Select the New York #3 Region&lt;/li&gt;
&lt;li&gt;Select Debian 10.0 x64 for the Droplet Image&lt;/li&gt;
&lt;li&gt;Setup a password or SSH key as the login method (I suggest using an SSH key)&lt;/li&gt;
&lt;li&gt;Finish creating the Droplet&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point you should be all done setting up the Droplet!&lt;/p&gt;
&lt;h1 id=&#34;turning-the-droplet-into-a-tor-relay&#34;&gt;Turning the Droplet into a Tor Relay&lt;/h1&gt;
&lt;p&gt;The next step is to SSH into the Droplet using an SSH client if you are on Windows or just from the command line if you are using Linux. (Or if you are using WSL then you fall under both categories. I will write another blog post about how to get setup with WSL and all the things I love about it some other time.)&lt;/p&gt;
&lt;p&gt;Grab the IP address of the Droplet you&amp;rsquo;ve just created and try to login as &lt;code&gt;root&lt;/code&gt;. If you have created a password, then you should be prompted to enter that. If you are using an SSH key then you should see some messages that ask you to enter Y/N, just enter Y to continue.&lt;/p&gt;
&lt;p&gt;Now we will install Tor and Arm onto this server by typing in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install tor tor-arm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will prompt you again to confirm by entering Y/N, enter Y to continue.&lt;/p&gt;
&lt;p&gt;Next we will need to edit some lines in the torrc file, type in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano /etc/tor/torrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will open the nano editor which allows you to edit the torrc file. Using arrow keys to scroll up and down in this file until you come across the following lines. These lines will be preceded by the # symbol. You will need to remove the # symbol and edit the lines to match the following input. These lines are not grouped together in the torrc file, however I assure you they are all present.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ORPort 443
Exitpolicy reject *.*
Nickname [Pick a nickname for your relay]
ContactInfo [email at provider dot com]
Log notice file /var/log/tor/notices.log
RelayBandwidthRate 1024 KB
RelayBandwidthBurst 1024 KB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the ContactInfo email needs to be obfuscated a little. This is because this email will be publicly listed. Consider making a burner email specifically for this relay as you will not want spam arriving in your daily inbox.&lt;/p&gt;
&lt;p&gt;Save and exit the file by pressing Ctrl X then following the prompt at the bottom of the screen.&lt;/p&gt;
&lt;p&gt;Next run the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service tor restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will save the implement the changes you&amp;rsquo;ve made to the torrc file.&lt;/p&gt;
&lt;p&gt;Finally, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo -u debian-tor nyx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If there have been no issues up until now, you should see some nice readouts showing you traffic coming into your brand new Tor relay.&lt;/p&gt;
&lt;p&gt;For the first few days your relay will receive reduced traffic due to the network taking some time to trust new relays.&lt;/p&gt;
&lt;p&gt;As a final step to ensure the relay is running you can check the &lt;a href=&#34;https://metrics.torproject.org/rs.html&#34;&gt;list&lt;/a&gt; of Tor relays and search for your Tor relay&amp;rsquo;s nickname to see if it has been listed and check it&amp;rsquo;s trust status.&lt;/p&gt;
&lt;h1 id=&#34;closing-notes&#34;&gt;Closing notes&lt;/h1&gt;
&lt;p&gt;While this guide is mostly beginner friendly, some elements such as setting up SSH keys might not be. I encourage the reader to search a little bit to find out how to configure these things. Most of my work up until now has shown me that almost everything you want to know is out there, you just have to find it.&lt;/p&gt;
&lt;p&gt;Big thank you to Robert DeVore&amp;rsquo;s original article that I based most of this post on. Most of his steps are still perfectly fine, however there were a few things that I wanted to clarify for users which spawned this post (along with the idea that students can essentially host a relay for free).&lt;/p&gt;
&lt;p&gt;If there is anything you didn&amp;rsquo;t understand about this please feel free to contact me.&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
