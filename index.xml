<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog </title>
    <link>https://franklinliang.github.io/</link>
    <language>en-us</language>
    <author>Franklin Liang</author>
    <rights>(C) 2025</rights>
    <updated>2025-06-02 00:55:04 -0700 PDT</updated>

    
      <item>
        <title>Dude Where&#39;s My Output?</title>
        <link>https://franklinliang.github.io/posts/dude-wheres-my-output/</link>
        <pubDate>Fri, 06 Dec 2024 19:08:06 -0500</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/dude-wheres-my-output/</guid>
        <description>&lt;p&gt;I recently had to build a simple project simulating a certificate authority, CRL distribution point, web server and client host. The web server ran Apache with a simple HTML page in conjunction with some PHP code. The purpose of the web server was to verify some messages signed by user x509 certificates that were, in turn, signed by the CA. The web server needed to display the output from some OpenSSL verification checks after getting the user x509, message signature and message file.&lt;/p&gt;
&lt;p&gt;The command I wanted to run and show output from was:&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl verify -verbose -crl_check -CRLfile project.crl.pem -trusted CARootCert.cer user.cer
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I needed to test some cases where the user certificate could be revoked or expired. In these cases, when the command is run in the terminal, it returns a multi-line output such as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C = Country, ST = State, L = City, O = Organization, OU = Unit, CN = Common Name, emailAddress = email@email.com
error 23 at 0 depth lookup: certificate revoked
error uploads/user.cer: verification failed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I combined with the PHP code to execute and display the command output:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$cmd = openssl verify -verbose -crl_check -CRLfile project.crl.pem -trusted CARootCert.cer u.cer
$res = shell_exec($cmd);
echo nl2br(htmlspecialchars($res);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, the output to the webpage was:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;error uploads/user.cer: verification failed
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Why is it only returning the last line of the output? In my debugging process I tried to run other multi-line commands to see if they print properly. Commands like &lt;code&gt;ls -l&lt;/code&gt; print perfectly find using the same code.&lt;/p&gt;
&lt;p&gt;This stumped me super hard, mainly because the only way to search for the solution to this problem was to know the answer already. It was also a bit tricky, as the fact that I was still able to echo the last line of output made it harder for me to reach the correct diagnosis.&lt;/p&gt;
&lt;p&gt;It turns out that the problem was that the first two lines of this output are written to &lt;code&gt;stderr&lt;/code&gt; and not &lt;code&gt;stdout&lt;/code&gt;. The &lt;code&gt;shell_exec&lt;/code&gt; command will only print out the &lt;code&gt;stdout&lt;/code&gt; response. This output provided by OpenSSL is a little bit misleading as the &lt;code&gt;stdout&lt;/code&gt; response starts with &lt;code&gt;error&lt;/code&gt;. Due to my inexperience in bash, the thought of &lt;code&gt;stdout&lt;/code&gt; vs &lt;code&gt;stderr&lt;/code&gt; never crossed my mind.&lt;/p&gt;
&lt;p&gt;To fix this, it is as simple as appending:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;$res = shell_exec($cmd.&amp;#34; 2&amp;gt;&amp;amp;1&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The snippet &lt;code&gt;&amp;quot; 2&amp;gt;&amp;amp;1&amp;quot;&lt;/code&gt; is a shell construct that takes file descriptor &lt;code&gt;1&lt;/code&gt;, which is &lt;code&gt;stdout&lt;/code&gt; and combines it with file descriptor &lt;code&gt;2&lt;/code&gt;, which is the &lt;code&gt;stderr&lt;/code&gt; into one merged output using &lt;code&gt;&amp;gt;&amp;amp;&lt;/code&gt;.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Finally, I&amp;rsquo;ve found the entire output. This displays the entire &lt;code&gt;stderr&lt;/code&gt; along with &lt;code&gt;stdout&lt;/code&gt;.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;The whole reason why I even need to execute this command instead of using the OpenSSL PHP library is because there is no way to perform a CRL check using the library! &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/818255/what-does-21-mean&#34;&gt;https://stackoverflow.com/questions/818255/what-does-21-mean&lt;/a&gt; &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
      </item>
    
      <item>
        <title>Runtimes 2</title>
        <link>https://franklinliang.github.io/posts/runtimes-2/</link>
        <pubDate>Tue, 25 Jun 2024 03:53:19 -0400</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/runtimes-2/</guid>
        <description>&lt;h1 id=&#34;verbose-if-else-vs-one-liner-if-else&#34;&gt;Verbose if else v.s. one-liner if else&lt;/h1&gt;
&lt;p&gt;This is a case that I believe to have seen actually impact runtimes somewhat consistently, so I&amp;rsquo;m interested to see if it was placebo or if this small change actually affects the runtime. The example goes as follows:&lt;/p&gt;
&lt;h2 id=&#34;case-1-verbose&#34;&gt;Case 1: Verbose&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(x):
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x:
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
		&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;case-2-one-liner&#34;&gt;Case 2: One-liner&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ifelse&lt;/span&gt;(x):
	&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see that given the same input &lt;code&gt;x&lt;/code&gt;, we would get the same result in the return statement. In my experience, I believe that the one-liner implementation is faster.&lt;/p&gt;
&lt;p&gt;Now to see what differs in the bytecode:&lt;/p&gt;
&lt;h2 id=&#34;case-1&#34;&gt;Case 1:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt; 2 LOAD_FAST                0 (x)
 4 POP_JUMP_IF_FALSE        1 (to 8) 

 6 RETURN_CONST             1 (True)

 8 RETURN_CONST             2 (False)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;case-2&#34;&gt;Case 2:&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt; 2 LOAD_FAST                0 (x)
 4 POP_JUMP_IF_FALSE        2 (to 10)
 6 LOAD_CONST               1 (True)
 8 RETURN_VALUE
10 LOAD_CONST               2 (False)
12 RETURN_VALUE
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At a first glance, this doesn&amp;rsquo;t really look good for one-liner implementation. It&amp;rsquo;s two lines longer where it requires the virtual machine to load the Boolean values in the instruction &lt;code&gt;LOAD_CONST&lt;/code&gt; and then returning the value instead of the combined instruction &lt;code&gt;RETURN_CONST&lt;/code&gt;. Running &lt;code&gt;timeit&lt;/code&gt; once again provided not very helpful results. There was no particular trend when testing the functions using both &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; as parameters.&lt;/p&gt;
&lt;p&gt;In the process of looking for why this discrepancy occurs, I found the &lt;a href=&#34;https://github.com/python/cpython/issues/101632&#34;&gt;Github issue&lt;/a&gt; that originally proposed the creation of the &lt;code&gt;RETURN_CONST&lt;/code&gt; instruction. Surprisingly this issue was opened fairly recently, February 7th, 2023, only about a year ago. The original author proposed a change to combine instances of &lt;code&gt;LOAD_CONST&lt;/code&gt; and &lt;code&gt;RETURN_VALUE&lt;/code&gt; as they appeared in pairs very often. Their notes say that adding the combined instruction created a small performance boost.&lt;/p&gt;
&lt;p&gt;What really surprised me here was how little discussion was needed to push this change. While the author did provide a lot of evidence towards the performance gain and the frequency of occurrences, it is still interesting that there was no debate at all in adding this feature.&lt;/p&gt;
&lt;p&gt;Which lead me to this &lt;a href=&#34;https://github.com/faster-cpython/ideas/issues/577&#34;&gt;issue&lt;/a&gt;. It was opened a mere month after the addition of &lt;code&gt;RETURN_CONST&lt;/code&gt; and brings up some points as to why &lt;code&gt;RETURN_CONST&lt;/code&gt; should be removed. This issue was not raised in the original CPython repo but in a branched project called faster-cpython which was started as a Microsoft backed project to make Python faster. I&amp;rsquo;m getting off topic now but there are some interesting points raised in that thread that could belong in the original issue. A change like introducing a new instruction seems like a big enough change that it warrants a larger discussion, but perhaps allowing more or less non-intrusive changes like this makes the CPython project more attractive for developers to contribute their time to.&lt;/p&gt;
&lt;p&gt;Wow, that went way off topic. Based off of the raw instruction count and the existence of the &lt;code&gt;RETURN_CONST&lt;/code&gt; instruction, these elements imply that the verbose method should be the faster of the two.&lt;/p&gt;
&lt;p&gt;It might be worth looking into why the one-liner doesn&amp;rsquo;t combine the &lt;code&gt;LOAD_CONST&lt;/code&gt; and &lt;code&gt;RETURN_VALUE&lt;/code&gt; instructions into one &lt;code&gt;RETURN_CONST&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Footnote: I found an &lt;a href=&#34;https://www.mail-archive.com/python-dev@python.org/msg95690.html&#34;&gt;even earlier mailing list entry&lt;/a&gt; discussing the idea of introducing &lt;code&gt;RETURN_CONST&lt;/code&gt; back from 2017. They propose the exact same idea but they say that they didn&amp;rsquo;t have enough bandwidth to drive the idea at the time.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Runtimes 1</title>
        <link>https://franklinliang.github.io/posts/runtimes-1/</link>
        <pubDate>Sat, 22 Jun 2024 04:51:25 -0400</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/runtimes-1/</guid>
        <description>&lt;h1 id=&#34;so-ive-been-doing-a-lot-of-dsa-questions&#34;&gt;So I&amp;rsquo;ve been doing a lot of DSA questions&lt;/h1&gt;
&lt;p&gt;In preparation for coding interviews I&amp;rsquo;ve been studying a lot of data structures and algorithms problems. The main goal when solving these problems is to work out a solution that has low time and space complexity. However when you submit questions on a online judge such as Leetcode, you tend to notice that some minor changes in your code, such as the order or way you write out if statements, can impact your runtime through the judge. Most of the time, this is not useful information. The judge will give you different runtimes for the exact same code, that&amp;rsquo;s just how timing code works, some runs will be faster than others. But deep down I always wondered, if you broke it down to the  bytecode, would there be a noticeable difference between some lines of code that don&amp;rsquo;t seem very different at a high level?&lt;/p&gt;
&lt;h2 id=&#34;combo-inequality-vs-two-inequalities-combined-with-an-and-operator&#34;&gt;Combo inequality vs two inequalities combined with an and operator&lt;/h2&gt;
&lt;h3 id=&#34;x--y--z-vs-x--y-and-y--z&#34;&gt;&lt;code&gt;x &amp;lt; y &amp;lt; z&lt;/code&gt; v.s. &lt;code&gt;x &amp;lt; y and y &amp;lt; z&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;At a high level, these are the same. But when we use &lt;a href=&#34;godbolt.com&#34;&gt;Godbolt&lt;/a&gt; to dive deeper and look at the bytecode, we will see that there are some differences.&lt;/p&gt;
&lt;p&gt;For the first case, &lt;code&gt;x &amp;lt; y &amp;lt; z&lt;/code&gt;, we can represent it with the following code snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;compare&lt;/span&gt;(target, lower, upper):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lower &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; upper:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The second case, &lt;code&gt;x &amp;lt; y and y &amp;lt; x&lt;/code&gt;$`:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;compare&lt;/span&gt;(target, lower, upper):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lower &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; target &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; upper:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we look at the bytecode for the first case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 2 LOAD_FAST                1 (lower)
 4 LOAD_FAST                0 (target)
 6 SWAP                     2
 8 COPY                     2
10 COMPARE_OP               2 (&amp;lt;)
14 POP_JUMP_IF_FALSE        5 (to 26)
16 LOAD_FAST                2 (upper)
18 COMPARE_OP               2 (&amp;lt;)
22 POP_JUMP_IF_FALSE        3 (to 30)

24 RETURN_CONST             1 (True)

26 POP_TOP
28 RETURN_CONST             0 (None)
30 RETURN_CONST             0 (None)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And the bytecode for the second case:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 2 LOAD_FAST                1 (lower)
 4 LOAD_FAST                0 (target)
 6 COMPARE_OP               2 (&amp;lt;)
10 POP_JUMP_IF_FALSE        7 (to 26)
12 LOAD_FAST                0 (target)
14 LOAD_FAST                2 (upper)
16 COMPARE_OP               2 (&amp;lt;)
20 POP_JUMP_IF_FALSE        1 (to 24)

22 RETURN_CONST             1 (True)

24 RETURN_CONST             0 (None)
26 RETURN_CONST             0 (None)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first thing that jumps out are the extra &lt;code&gt;SWAP&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; instructions in the first case. To compensate for not having two occurrences of the &lt;code&gt;target&lt;/code&gt; parameter, the code will make a copy of &lt;code&gt;target&lt;/code&gt; to use in the &lt;code&gt;18 COMPARE_OP&lt;/code&gt; instruction.&lt;/p&gt;
&lt;p&gt;Because of the extra &lt;code&gt;SWAP&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; instructions, the first &lt;code&gt;COMPARE_OP&lt;/code&gt; and &lt;code&gt;POP_JUMP_IF_FALSE&lt;/code&gt; instructions occur earlier in the second case than the first case.&lt;/p&gt;
&lt;p&gt;In essence, the &lt;code&gt;AND&lt;/code&gt; operator doesn&amp;rsquo;t make any extra work for the virtual machine, but omitting a second &lt;code&gt;target&lt;/code&gt; in the python code does as the virtual machine needs to make a copy of it for the comparison operation.&lt;/p&gt;
&lt;p&gt;The actual runtime trade off is negligible when running &lt;code&gt;timeit&lt;/code&gt;, it&amp;rsquo;s random which one of the two code samples executes faster. For conceptual simplicity, I&amp;rsquo;ll stick to writing these types of statements with the combo operator, but it&amp;rsquo;s interesting to know that it makes just a tiny bit more work for the virtual machine.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Homelab 2</title>
        <link>https://franklinliang.github.io/posts/homelab-2/</link>
        <pubDate>Sun, 16 Jun 2024 21:00:59 -0400</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/homelab-2/</guid>
        <description>&lt;h1 id=&#34;hiatus&#34;&gt;Hiatus&lt;/h1&gt;
&lt;p&gt;It&amp;rsquo;s been a while since my last blog entry, but I had a draft of this post kicking around from October of 2021 talking about the stuff I did with the homelab (past tense, I&amp;rsquo;ll get to that). I can&amp;rsquo;t talk about the super technical details or challenges I faced since I don&amp;rsquo;t exactly remember what happened, but I will try my best.&lt;/p&gt;
&lt;h1 id=&#34;great-things&#34;&gt;Great things&lt;/h1&gt;
&lt;p&gt;I had great aspirations for the homelab when I first got it running. The big goal I wanted to work towards was setting up Jellyfin (or if I got lazy, Plex) on the homelab so I could watch my collection of movies from any device within the house.&lt;/p&gt;
&lt;p&gt;I did not get that far.&lt;/p&gt;
&lt;p&gt;But I did manage to do some cool things with the server while it was still alive.&lt;/p&gt;
&lt;h2 id=&#34;samba&#34;&gt;Samba&lt;/h2&gt;
&lt;p&gt;I created a network share using Samba that my dad and I used to host some temp files that we wanted to share with each other and other things that we wanted to have backups of. Getting Samba configured was a bit of a challenge as sometimes the file share wouldn&amp;rsquo;t read properly on Windows devices but the issues mainly stemmed from some improper config files.&lt;/p&gt;
&lt;h2 id=&#34;lancache&#34;&gt;Lancache&lt;/h2&gt;
&lt;p&gt;The year was 2021, and my download speed was about 40 MB on a good day. My PC only had about 1 TB of storage (only haha) so I had to offload games sometimes to make space for new ones. It&amp;rsquo;s a crime that games can be 100 GB. Regardless, there was a solution for my problem in the form of Lancache. Lancache, as it&amp;rsquo;s name suggests, is usually used for LAN parties where many participants might need to download the same game, but you don&amp;rsquo;t want 10 people trying to download the same 50 GB game. So the solution is to download the game onto a single server and serve it up locally to anyone who wants to play. I decided to use this software to cache my games locally so I wouldn&amp;rsquo;t need to re-download Grand Theft Auto 5 for the hundredth time.&lt;/p&gt;
&lt;p&gt;The year is now 2024 and my download speed is still 40 MB on a good day.&lt;/p&gt;
&lt;h2 id=&#34;minecraft-server-w-ngrok&#34;&gt;Minecraft server w/ Ngrok&lt;/h2&gt;
&lt;p&gt;My friends and I play Minecraft every once in a while and someone always needed to host it locally or purchase some hosting plan for the duration of our gameplay. I decided that with the new homelab, I could try hosting on that. To simplify the port forwarding process I used Ngrok to open a port in a relatively safe way.&lt;/p&gt;
&lt;p&gt;Now at this point I hadn&amp;rsquo;t considered if the hardware in the server would be able to support a Minecraft server. The RAM and CPU were old, but still fairly powerful so I assumed there would be no problems.&lt;/p&gt;
&lt;p&gt;I logged in, there was a bit of lag but I assumed that was because my local network was not great. My friend logged in and he said it was playable at least. Finally a third friend logged in and the whole thing metaphorically caught fire and crashed.&lt;/p&gt;
&lt;h1 id=&#34;is-it-dead&#34;&gt;Is it dead?&lt;/h1&gt;
&lt;p&gt;Yes. If dead means unusable then yes. I&amp;rsquo;m not sure what failed, whether it was the shoddy RAID controller that took me dozens of tries to get a single RAID 0 config to work. Or if it was the old dying RAM and CPU. Or something else entirely. But the whole system was locked in read-only mode. Numerous attempts at trying to restore the system did not work. Luckily there was nothing on that server that didn&amp;rsquo;t have a backup so I finally pulled the plug and started a fresh install on the server once again.&lt;/p&gt;
&lt;h1 id=&#34;epilogue&#34;&gt;Epilogue&lt;/h1&gt;
&lt;p&gt;The server has been unplugged for a while, turned off while I went back to in-person university after the COVID lockdowns ended. I think I&amp;rsquo;m gonna start it back up again. I&amp;rsquo;m sure that in its sleep it has accumulated many problems once again, but soon it will be back up and running.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Homelab 1</title>
        <link>https://franklinliang.github.io/posts/homelab-1/</link>
        <pubDate>Wed, 05 May 2021 03:39:06 -0400</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/homelab-1/</guid>
        <description>&lt;h1 id=&#34;why-how-and-what&#34;&gt;Why, How and What&lt;/h1&gt;
&lt;p&gt;I felt incredible joy after finishing my final exam of the term following 12 months of continuous schooling. But less than 72 hours later I was already bored. I needed something to do, so I made the Friedman translator. This was a project that would normally take me weeks due to dealing with school, but I finished it in under two days. I needed a bigger project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Hey I&amp;rsquo;m picking up some furniture from the office, maybe we can get a server too.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s all I needed to hear. 6 hours of backbreaking labour later, we fit a whole office worth of furniture (plus a server) into two trips in the minivan. Now it was time to get to work.&lt;/p&gt;
&lt;p&gt;The server is a Dell R710. I did not know what a Dell R710 was at the time of taking the server and I definitely did not know how to set it up. Physically, the server is pretty big and deceptively heavy. It came with 10 gigabit ports and four drive bays. In my mind I was already fawning over the hardware. Too bad I didn&amp;rsquo;t know what I really should have been looking for&amp;hellip;&lt;/p&gt;
&lt;h1 id=&#34;the-setup&#34;&gt;The setup&lt;/h1&gt;
&lt;p&gt;First thing I did was search up how to configure an R710. That&amp;rsquo;s when I found my first problem.&lt;/p&gt;
&lt;p&gt;iDRAC.&lt;/p&gt;
&lt;p&gt;Every single guide on how to setup the R710 seemed to need iDRAC. iDRAC stands for integrated Dell Remote Access Controller. This nifty port would allow me to access my R710 over a network and perform some expediated updates and put an OS on the system. The iDRAC slot on my R710 was empty. Dang.&lt;/p&gt;
&lt;p&gt;Thankfully the R710 used to be a favourite of the sub-reddit &lt;a href=&#34;https://www.reddit.com/r/homelab/&#34;&gt;/r/homelab&lt;/a&gt;. I use past tense because while there is good documentation for using R710s, it is now on /r/homelab&amp;rsquo;s no-buy list due to issues with age. Ok, fine, whatever, as long as it works I&amp;rsquo;ll be happy. It&amp;rsquo;s a learning experience right?&lt;/p&gt;
&lt;h2 id=&#34;firmware&#34;&gt;Firmware&lt;/h2&gt;
&lt;p&gt;I found some tips on how to update the firmware on &lt;a href=&#34;https://www.reddit.com/r/homelab/comments/5ldiel/so_you_wantgot_an_r710/&#34;&gt;this mega-post&lt;/a&gt; for configuring R710s. The link to the firmware update in that post is dead, but I found another &lt;a href=&#34;https://enterprisehomelab.blogspot.com/2020/12/dell-r710-update-iso.html&#34;&gt;website hosting the file&lt;/a&gt;. I then imaged the iso onto a usb and plugged it into the server. The remainder of the night was spent figuring out why the firmware update would crash. It displayed a cryptic error message that lead me down many stackoverflow rabbit holes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/homelab-1/error.jpeg&#34; alt=&#34;Error&#34;&gt;&lt;/p&gt;
&lt;p&gt;My saviour was a reddit post where a user had similar error messages to my own and their solution was&amp;hellip; to image the iso to a disc. Ok I mean why not, I&amp;rsquo;ll try this tomorrow.&lt;/p&gt;
&lt;p&gt;And it totally worked. I had to find an ancient laptop that still had a disc drive, but I imaged the iso to a DVD and voila, the server was updating firmware. The next step was to configure the hard drives.&lt;/p&gt;
&lt;h2 id=&#34;raid&#34;&gt;RAID&lt;/h2&gt;
&lt;p&gt;When we took the server it came with four hard drives inside the slots. Two were 250 GB drives and two were 160 GB drives. Alongside these, we also took two additional 250 GB drives. The plan was to swap out the 160 GB drives with the extra 250 GB drives to have ~1TB of storage.&lt;/p&gt;
&lt;p&gt;I swapped both drives out and booted up the server. I went to configure the storage and&amp;hellip; one of the drives would not show up in the menu. It wasn&amp;rsquo;t missing, it just refused to show up. The light on the front of the drive was also not on, so I assumed it was busted. Ok I&amp;rsquo;ll just go with three drives for now as a test. I configured the RAID and restarted.&lt;/p&gt;
&lt;p&gt;Error messages, error messages everywhere. The drive was missing. The third drive would appear as missing every single time I restarted the server after a RAID configuration.&lt;/p&gt;
&lt;p&gt;I tried for a few hours to get the drives to work, but even if I managed to get the RAID to work through the startup, it would instantly fail when I tried to install Ubuntu. The virtual drive would not show up and instead a single 250 GB drive would be the only option.&lt;/p&gt;
&lt;p&gt;In the end I just put back the two original 160 GB drives and miraculously that was able to work. I don&amp;rsquo;t know why the 250 GB drive would detect and then go missing. It&amp;rsquo;s a mystery to me, but I didn&amp;rsquo;t care. Ubuntu was telling me I had a single virtual drive, and from there it was easy street.&lt;/p&gt;
&lt;h1 id=&#34;what-now&#34;&gt;What now&lt;/h1&gt;
&lt;p&gt;I don&amp;rsquo;t know what I&amp;rsquo;m going to run on the server but at least it is functioning. Maybe I&amp;rsquo;ll start a Jellyfin server or something. But that&amp;rsquo;s for another time.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>Elliotte Friedman</title>
        <link>https://franklinliang.github.io/posts/elliotte-friedman/</link>
        <pubDate>Sat, 01 May 2021 21:13:37 -0400</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/elliotte-friedman/</guid>
        <description>&lt;h1 id=&#34;who-is-elliotte-friedman&#34;&gt;Who is Elliotte Friedman?&lt;/h1&gt;
&lt;p&gt;This is Elliotte Friedman.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This tweet has since been deleted, here is a saved screenshot&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/Elliotte-Friedman/Tweet.png&#34; alt=&#34;Tweet&#34;&gt;&lt;/p&gt;
&lt;p&gt;CAL and MON are not abbreviations. With this translator now you can make an educated guess as to what ELF is trying to say.&lt;/p&gt;
&lt;div&gt;
	What did Elliot Friedman say this time: &lt;input type=&#34;text&#34; id=&#34;myText&#34;&gt;

    &lt;button onclick=&#34;friedman()&#34;&gt;Decipher&lt;/button&gt;

    &lt;p id=&#34;result&#34;&gt;&lt;/p&gt;

    &lt;script&gt;
      function friedman() {
        var acronym = document.getElementById(&#34;myText&#34;);

        var teams = [&#34;Anaheim Ducks&#34;, &#34;Arizona Coyotes&#34;, &#34;Boston Bruins&#34;, &#34;Buffalo Sabres&#34;, &#34;Calgary Flames&#34;, &#34;Carolina Hurricanes&#34;, &#34;Chicago Blackhawks&#34;, &#34;Colorado Avalanche&#34;, &#34;Columbus Blue Jackets&#34;, &#34;Dallas Stars&#34;, &#34;Detroit Red Wings&#34;, &#34;Edmonton Oilers&#34;, &#34;Florida Panthers&#34;, &#34;Los Angeles Kings&#34;, &#34;Minnesota Wild&#34;, &#34;Montreal Canadiens&#34;, &#34;Nashville Predators&#34;, &#34;New Jersey Devils&#34;, &#34;New York Islanders&#34;, &#34;New York Rangers&#34;, &#34;Ottawa Senators&#34;, &#34;Philadelphia Flyers&#34;, &#34;Pittsburgh Penguins&#34;, &#34;San Jose Sharks&#34;, &#34;St. Louis Blues&#34;, &#34;Tampa Bay Lightning&#34;, &#34;Toronto Maple Leafs&#34;, &#34;Vancouver Canucks&#34;, &#34;Vegas Golden Knights&#34;, &#34;Washington Capitals&#34;, &#34;Winnipeg Jets&#34;];

        var counter = 0;
        var fteams = [];

        for (team in teams) {

        var letters = acronym.value.toUpperCase().split(&#39;&#39;);
        var format_team = teams[team].toUpperCase().replace(&#34; &#34;,&#34;&#34;);

        if (format_team[0] == letters[0]) { 
          for (character in format_team) {
            if (letters != []) {
              if (format_team[character] == letters[0]) {
                letters = letters.slice(1);
              };
            };
          };
        };

        if (!letters.length) {
          fteams.push(teams[counter]);
        };

        counter += 1;
        };

        document.getElementById(&#34;result&#34;).innerHTML = fteams.join(&#34;, &#34;);
      };
    &lt;/script&gt;
&lt;/div&gt;
</description>
      </item>
    
      <item>
        <title>First Person AHK</title>
        <link>https://franklinliang.github.io/posts/first-person-ahk/</link>
        <pubDate>Fri, 12 Mar 2021 19:34:10 -0500</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/first-person-ahk/</guid>
        <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;The first time I had ever used AHK was back in highschool. My friend made a Discord bot called &amp;ldquo;Starmine&amp;rdquo; that would give out points whenever a user typed !starmine.&lt;/p&gt;
&lt;p&gt;It was a fun incremental/idle game that we all played, and while you could wait for the passive point generation, the fastest way to get points was to type  !starmine.&lt;/p&gt;
&lt;p&gt;The game got really competitive and as we went into the summer months and I needed a way to edge out the competition.&lt;/p&gt;
&lt;p&gt;Enter AHK.&lt;/p&gt;
&lt;p&gt;A few minutes of searching yielded this language that was easy to use for a programming beginner (me).&lt;/p&gt;
&lt;p&gt;Back in 2017, the wiki for AHK was a little lacking in detail but I was able to piece together a simple script, with some help from reddit, which automated the Starmine game. Success!&lt;/p&gt;
&lt;h1 id=&#34;elite-afk&#34;&gt;Elite: AFK&lt;/h1&gt;
&lt;p&gt;Fast forward to Christmas 2020, more than three years since I last touched AHK. My friend introduced me to a game called Elite: Dangerous, a mind numbing MMO that I have developed a love-hate relationship with in my three months of experience.&lt;/p&gt;
&lt;p&gt;Within this game there are several unfun gameplay loops that you need to master in order to progress to the more fun portions of the game. One of these loops is gathering engineering materials.&lt;/p&gt;
&lt;p&gt;Smart players figured out the most efficient way to gather each type of material and compiled it into a spreadsheet.&lt;/p&gt;
&lt;p&gt;There within lies the dreaded Jameson&amp;rsquo;s Crashed Python. This method of collecting encoded data requires the player to point and click three beacons around the player, and then log out and log back in to reset the beacons.&lt;/p&gt;
&lt;p&gt;This is not gameplay. I don&amp;rsquo;t know what this is, but it is definitely not gameplay.&lt;/p&gt;
&lt;p&gt;My friend had been playing this game for five years and has done this task hundreds of times. So I dusted off AHK and got to work.&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t recognize the AHK docs the first time I opened them up. They were so neatly organized, the style was much better and it was apparent that a lot of effort went into making examples.&lt;/p&gt;
&lt;h1 id=&#34;planning-the-script&#34;&gt;Planning the script&lt;/h1&gt;
&lt;p&gt;From the get-go I scoped out some issues I knew would suck.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How do I pan the camera&lt;/li&gt;
&lt;li&gt;How do I deal with loading screens&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Everything else could be accomplished with sequential keypresses.&lt;/p&gt;
&lt;h1 id=&#34;panning-the-camera&#34;&gt;Panning the camera&lt;/h1&gt;
&lt;p&gt;AHK has the ability to move a cursor to a specific point on the screen using the &lt;code&gt;MouseMove&lt;/code&gt; function. However, this doesn&amp;rsquo;t work in first person games.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/MouseMove.jpg&#34; alt=&#34;MouseMove&#34;&gt;&lt;/p&gt;
&lt;p&gt;You can&amp;rsquo;t move the mouse to a point further than the edge of the screen. I needed a way to move the mouse in a direction instead of to a point.&lt;/p&gt;
&lt;p&gt;After searching the AHK forums, I stumbled upon a library called LLMouse written by evilC.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.autohotkey.com/boards/viewtopic.php?f=19&amp;amp;t=26137&#34;&gt;https://www.autohotkey.com/boards/viewtopic.php?f=19&amp;amp;t=26137&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A copy of the library can be found &lt;a href=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/LLMouse.ahk&#34;&gt;here&lt;/a&gt; (fetched December 2020)&lt;/p&gt;
&lt;p&gt;The description says, &amp;ldquo;a library to send low level mouse input&amp;rdquo;. The library comes with a function &lt;code&gt;LLMouse.Move(x, y, times, rate)&lt;/code&gt; which lets us move the mouse some number of units in a direction. It also lets us specify the speed and multiplier for movement.&lt;/p&gt;
&lt;p&gt;Perfect, now we can pan the camera by sending relative movement input. Even if the mouse hits the side of the screen, we can continue to move the mouse.&lt;/p&gt;
&lt;h1 id=&#34;loading-screens&#34;&gt;Loading screens&lt;/h1&gt;
&lt;p&gt;The other parts of the script can be timed or done sequentially. Loading screens are a different issue as the time it takes to get through the loading screen varies from computer to computer.&lt;/p&gt;
&lt;p&gt;Looking through the AHK wiki, I found a function called &lt;code&gt;PixelGetColor&lt;/code&gt; which allows AHK to obtain the color of a specified pixel.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/Loading1.jpg&#34; alt=&#34;First Loading Screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first loading screen is between exiting the game and entering the main menu. The program looks for a light blue pixel that should remain the same across all game versions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://franklinliang.github.io/static/assets/First-Person-AHK/Loading2.jpg&#34; alt=&#34;Second Loading Screen&#34;&gt;&lt;/p&gt;
&lt;p&gt;The next loading screen is between the main menu and entering the game. The program looks for when the black color of the loading screen stop showing up. I didn&amp;rsquo;t pick a color that appears on screen after the loading finishes because different ships have varying colors and users can customize the HUD colors.&lt;/p&gt;
&lt;h1 id=&#34;all-done-sort-of&#34;&gt;All done! Sort of&amp;hellip;&lt;/h1&gt;
&lt;p&gt;The code was pretty simple to work out but there are still many things to improve. The script only works for 1980x1080 resolution since the camera movements are hard-coded. I believe that I could calculate the ratio of movement required to move from one beacon to the next, meaning that a user would only have to modify one parameter to adjust the overall camera movement.&lt;/p&gt;
&lt;p&gt;The biggest issue is the reliability of the SRV positioning. I have a screenshot in the repo for the script but it is still unreliable.&lt;/p&gt;
&lt;p&gt;There was a bug where the exit script button doesn&amp;rsquo;t work sometimes. I&amp;rsquo;m not actually sure what the issue with that is, I would love it if someone would let me know.&lt;/p&gt;
&lt;p&gt;The repo can be found &lt;a href=&#34;https://github.com/FranklinLiang/Jameson&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;p&gt;This entire project is Matthew&amp;rsquo;s fault, and will not be maintained while I have ragequitted Elite. Feel free to make it better and fix it up yourself.&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>How to run a Tor relay as a student for free</title>
        <link>https://franklinliang.github.io/posts/how-to-run-a-tor-relay-as-a-student-for-free/</link>
        <pubDate>Sun, 31 Jan 2021 03:23:22 -0500</pubDate>
        <author>Franklin Liang</author>
        <guid>https://franklinliang.github.io/posts/how-to-run-a-tor-relay-as-a-student-for-free/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;This post is based on Robert DeVore&amp;rsquo;s &amp;ldquo;Run a Tor relay&amp;rdquo; found here:
&lt;a href=&#34;https://www.robertdevore.com/run-a-tor-relay/&#34;&gt;https://www.robertdevore.com/run-a-tor-relay/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tor is a service used by thousands of people everyday to access the internet safely and anonymously.&lt;/p&gt;
&lt;p&gt;While I have been using Tor for quite some time, it always seemed daunting to help the Tor network by running a relay. Horror stories about getting mail from ISPs relating to the traffic of anonymous users accessing illegal materials masked by your IP.&lt;/p&gt;
&lt;p&gt;This is a common misconception that just by running a relay, you run the risk of being targeted by authorities.&lt;/p&gt;
&lt;h1 id=&#34;types-of-tor-relays&#34;&gt;Types of Tor relays&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Parts of this are abridged from the EFF&amp;rsquo;s page on Tor relays:
&lt;a href=&#34;https://www.eff.org/pages/what-tor-relay&#34;&gt;https://www.eff.org/pages/what-tor-relay&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are three different types of Tor relays: middle relays, exit relays, and bridges. Each serve an important purpose, however the risk associated with running each type of relay is different.&lt;/p&gt;
&lt;p&gt;When a connection is established using Tor, the first two hops are through middle relays. These middle relays help anonymize the the traffic of the user by passing it along to another relay. However, since these relays are not passing traffic into the clearnet, there is very little risk in running a middle relay. The main risk falls upon someone operating an exit relay.&lt;/p&gt;
&lt;p&gt;Exit relays act as the source of the traffic, thus when illegal materials are accessed using Tor, the exit relay appears as the source of the request. Exit relays are much harder to operate due to the work required to maintain the relay as it may attract attention from law enforcement agencies.&lt;/p&gt;
&lt;p&gt;Bridges are similar to middle relays, however they are not publicly listed as a relay. These relays are important to circumvent censorship tools in countries that restrict access to Tor.&lt;/p&gt;
&lt;p&gt;In this guide I will demonstrate how to setup a &lt;strong&gt;middle relay&lt;/strong&gt;.&lt;/p&gt;
&lt;h1 id=&#34;accessing-the-github-student-pack&#34;&gt;Accessing the Github Student Pack&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are not a student, you can skip this portion, however you will have to pay to setup the server that the relay operates from.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Since 2013, Github has provided students with a Student Developer Pack. This amazing program allows for students that sign up for Github with a student email to receive a plethora of free services and software.&lt;/p&gt;
&lt;p&gt;All you need to do is navigate to: &lt;a href=&#34;https://education.github.com/pack&#34;&gt;https://education.github.com/pack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow the instructions on the site to get access to your free pack. After this, you want to find the DigitalOcean free credit offer.&lt;/p&gt;
&lt;p&gt;Copy and redeem the code on DigitalOcean&amp;rsquo;s billing page after creating an account.&lt;/p&gt;
&lt;h1 id=&#34;creating-the-droplet&#34;&gt;Creating the Droplet&lt;/h1&gt;
&lt;p&gt;Once you&amp;rsquo;ve created your account DigitalOcean will provide you with some options to jumpstart a project. We will ignore this and instead navigate towards the Create Droplet button. You will be taken to a page that provides you with some options for configuring your Droplet.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Droplets are just what DigitalOcean calls their machines&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Name your Droplet&lt;/li&gt;
&lt;li&gt;Select the $5/month option&lt;/li&gt;
&lt;li&gt;Select the New York #3 Region&lt;/li&gt;
&lt;li&gt;Select Debian 10.0 x64 for the Droplet Image&lt;/li&gt;
&lt;li&gt;Setup a password or SSH key as the login method (I suggest using an SSH key)&lt;/li&gt;
&lt;li&gt;Finish creating the Droplet&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point you should be all done setting up the Droplet!&lt;/p&gt;
&lt;h1 id=&#34;turning-the-droplet-into-a-tor-relay&#34;&gt;Turning the Droplet into a Tor Relay&lt;/h1&gt;
&lt;p&gt;The next step is to SSH into the Droplet using an SSH client if you are on Windows or just from the command line if you are using Linux. (Or if you are using WSL then you fall under both categories. I will write another blog post about how to get setup with WSL and all the things I love about it some other time.)&lt;/p&gt;
&lt;p&gt;Grab the IP address of the Droplet you&amp;rsquo;ve just created and try to login as &lt;code&gt;root&lt;/code&gt;. If you have created a password, then you should be prompted to enter that. If you are using an SSH key then you should see some messages that ask you to enter Y/N, just enter Y to continue.&lt;/p&gt;
&lt;p&gt;Now we will install Tor and Arm onto this server by typing in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install tor tor-arm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will prompt you again to confirm by entering Y/N, enter Y to continue.&lt;/p&gt;
&lt;p&gt;Next we will need to edit some lines in the torrc file, type in:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nano /etc/tor/torrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will open the nano editor which allows you to edit the torrc file. Using arrow keys to scroll up and down in this file until you come across the following lines. These lines will be preceded by the # symbol. You will need to remove the # symbol and edit the lines to match the following input. These lines are not grouped together in the torrc file, however I assure you they are all present.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ORPort 443
Exitpolicy reject *.*
Nickname [Pick a nickname for your relay]
ContactInfo [email at provider dot com]
Log notice file /var/log/tor/notices.log
RelayBandwidthRate 1024 KB
RelayBandwidthBurst 1024 KB
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the ContactInfo email needs to be obfuscated a little. This is because this email will be publicly listed. Consider making a burner email specifically for this relay as you will not want spam arriving in your daily inbox.&lt;/p&gt;
&lt;p&gt;Save and exit the file by pressing Ctrl X then following the prompt at the bottom of the screen.&lt;/p&gt;
&lt;p&gt;Next run the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service tor restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will save the implement the changes you&amp;rsquo;ve made to the torrc file.&lt;/p&gt;
&lt;p&gt;Finally, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo -u debian-tor nyx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If there have been no issues up until now, you should see some nice readouts showing you traffic coming into your brand new Tor relay.&lt;/p&gt;
&lt;p&gt;For the first few days your relay will receive reduced traffic due to the network taking some time to trust new relays.&lt;/p&gt;
&lt;p&gt;As a final step to ensure the relay is running you can check the &lt;a href=&#34;https://metrics.torproject.org/rs.html&#34;&gt;list&lt;/a&gt; of Tor relays and search for your Tor relay&amp;rsquo;s nickname to see if it has been listed and check it&amp;rsquo;s trust status.&lt;/p&gt;
&lt;h1 id=&#34;closing-notes&#34;&gt;Closing notes&lt;/h1&gt;
&lt;p&gt;While this guide is mostly beginner friendly, some elements such as setting up SSH keys might not be. I encourage the reader to search a little bit to find out how to configure these things. Most of my work up until now has shown me that almost everything you want to know is out there, you just have to find it.&lt;/p&gt;
&lt;p&gt;Big thank you to Robert DeVore&amp;rsquo;s original article that I based most of this post on. Most of his steps are still perfectly fine, however there were a few things that I wanted to clarify for users which spawned this post (along with the idea that students can essentially host a relay for free).&lt;/p&gt;
&lt;p&gt;If there is anything you didn&amp;rsquo;t understand about this please feel free to contact me.&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
